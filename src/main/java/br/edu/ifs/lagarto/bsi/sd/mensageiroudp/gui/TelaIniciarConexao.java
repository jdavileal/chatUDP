/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.edu.ifs.lagarto.bsi.sd.mensageiroudp.gui;

import br.edu.ifs.lagarto.bsi.sd.mensageiroudp.conexao.ClienteUDP;
import java.text.ParseException;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JProgressBar;
import javax.swing.text.MaskFormatter;

/**
 *
 * @author zero
 */
public class TelaIniciarConexao extends javax.swing.JFrame {

    private ClienteUDP clienteUdp;
    MaskFormatter formatter;

    /**
     * Creates new form Main
     */
    public TelaIniciarConexao() {
        int porta = 40000 + new Random().nextInt(1000);
        clienteUdp = new ClienteUDP(porta, System.getProperty("user.name"));
        initComponents();
        try {
            formatter = new MaskFormatter("###.###.###.###");
        } catch (ParseException ex) {
            Logger.getLogger(TelaIniciarConexao.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jtfIp1 = new javax.swing.JTextField();
        jtfIp2 = new javax.swing.JTextField();
        jtfIp3 = new javax.swing.JTextField();
        jtfIp4 = new javax.swing.JTextField();
        jtfPorta = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jbIniciarConexao = new javax.swing.JButton();
        jpbLoading = new javax.swing.JProgressBar();
        jlLoading = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(Principal.color);

        jLabel2.setText("IP:");

        jLabel3.setText("Porta:");

        jbIniciarConexao.setText("Iniciar Conexão");
        jbIniciarConexao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbIniciarConexaoActionPerformed(evt);
            }
        });

        jpbLoading.setVisible(false);

        jlLoading.setFont(new java.awt.Font("Ubuntu", 3, 18)); // NOI18N
        jlLoading.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlLoading, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtfIp1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jtfIp2, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtfIp3, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jtfIp4, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel3)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(74, 74, 74)
                                .addComponent(jtfPorta, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 70, Short.MAX_VALUE))
                    .addComponent(jpbLoading, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jbIniciarConexao)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtfIp2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfIp1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfIp4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfIp3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jtfPorta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addComponent(jbIniciarConexao)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addComponent(jlLoading)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpbLoading, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbIniciarConexaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbIniciarConexaoActionPerformed

        String ip = jtfIp1.getText() + "." + jtfIp2.getText() + "." + jtfIp3.getText() + "." + jtfIp4.getText();
        if (!isIpValid(ip)) {
            JOptionPane.showMessageDialog(this, "Por favor informe um IP Correto!!!", "O IP é inválido!", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (!isPortValid(jtfPorta.getText())) {
            JOptionPane.showMessageDialog(this, "Por favor informe uma porta correta!!!", "A Porta informada é inválida!", JOptionPane.ERROR_MESSAGE);
            return;
        }
        jpbLoading.setVisible(true);
        jpbLoading.setIndeterminate(true);
        jlLoading.setText("Iniciando a conexão com "+ip);

        new Thread(new Runnable() {
            public void run() {
                boolean r = clienteUdp.IniciarConexao(ip, Integer.parseInt(jtfPorta.getText()));
                if (!r) {
                    JOptionPane.showMessageDialog(TelaIniciarConexao.this, "A conexão foi recursada");
                    jpbLoading.setVisible(false);
                    jpbLoading.setIndeterminate(false);
                    jbIniciarConexao.setEnabled(true);
                    return;
                }
                java.awt.EventQueue.invokeLater(new Runnable() {
                    public void run() {;
                        new TelaMensageiro(clienteUdp).setVisible(true);
                        dispose();
                    }
                });
            }
        }).start();
        jbIniciarConexao.setEnabled(false);


    }//GEN-LAST:event_jbIniciarConexaoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaIniciarConexao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaIniciarConexao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaIniciarConexao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaIniciarConexao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaIniciarConexao().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton jbIniciarConexao;
    private javax.swing.JLabel jlLoading;
    private javax.swing.JProgressBar jpbLoading;
    private javax.swing.JTextField jtfIp1;
    private javax.swing.JTextField jtfIp2;
    private javax.swing.JTextField jtfIp3;
    private javax.swing.JTextField jtfIp4;
    private javax.swing.JTextField jtfPorta;
    // End of variables declaration//GEN-END:variables

    private boolean isIpValid(String ip) {
        String[] oct = ip.split("\\.");

        if (oct.length != 4) {
            return false;
        }
        try {
            for (String o : oct) {
                int n = Integer.parseInt(o);
                if (n < 0 && n > 255) {
                    return false;
                }
            }
            return true;
        } catch (Exception p) {
            return false;
        }
    }

    private boolean isPortValid(String port) {
        try {
            int n = Integer.parseInt(port);
            if (n < 1 && n > Math.pow(2, 16)) {
                return false;
            }
            return true;
        } catch (Exception p) {
            return false;
        }
    }

}
